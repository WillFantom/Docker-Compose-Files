version: "3.7"

# Secure Reverse Proxy

services:

  traefik:
    container_name: traefik
    image: traefik:v2.0.0
    restart: always
    networks:
      - default
      - traefik-network
    ports:
      - 8080:8080
      - 443:443
      - 80:80
    volumes:
      - ${CERT_DIR}:/letsencrypt
      - ${RULES_DIR}:/rules
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - TRAEFIK_ACCESSLOG=true
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--log.level=ERROR"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-network"
      - "--providers.file.directory=/rules"
      - "--providers.file.watch=true"
      - "--providers.rest=true"
      - "--providers.rest.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.cfdns.acme.dnschallenge=true"
      - "--certificatesresolvers.cfdns.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.mydnschallenge.acme.email=${CF_API_EMAIL}"
      - "--certificatesresolvers.cfdns.acme.storage=/letsencrypt/acme.json"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--metrics.prometheus.entrypoint=traefik"
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik-sec.entrypoints=websecure
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik-sec.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik-sec.service=api@internal
      - traefik.http.middlewares.tls-redirect.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=tls-redirect
      - traefik.http.middlewares.bauth.basicauth.users=${USERNAME}:${HASHEDPASS}
      - traefik.http.routers.traefik-sec.middlewares=bauth
      - traefik.http.routers.traefik-sec.tls=true
      - traefik.http.routers.traefik-sec.tls.certresolver=cfdns
      
networks:
  traefik-network:
    external: true
  default:
    driver: bridge